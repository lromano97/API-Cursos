openapi: 3.0.0
info:
  title: API para cursos
  description: API para la creacion, edicion y eliminacion de cursos
  version: 1.0.0-oas3
servers:
- url: http://virtserver.swaggerhub.com/lromano/APICursos/1.0.0
security:
- bearerAuth: []
paths:
  /cursos:
    get:
      tags:
      - Curso
      summary: Obtener cursos
      description: Se pueden filtrar los cursos a partir de los parametros agregados en el query
      operationId: obtenerCursos
      parameters:
      - name: anioDictado
        in: query
        description: AÃ±o en el que se dicto el curso
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: duracion
        in: query
        description: Duracion del curso a filtrar
        required: false
        style: form
        explode: true
        schema:
          type: number
      responses:
        200:
          description: Se obtuvieron los datos de los cursos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Curso'
        404:
          description: No se encontraron datos de cursos
        500:
          description: Error de servidor
    post:
      tags:
      - Curso
      summary: Agregar un nuevo curso
      operationId: agregarCurso
      requestBody:
        description: Curso que quiere ser agregado
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Curso'
        required: true
      responses:
        201:
          description: Curso creado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curso'
        400:
          description: Datos invalidos
        500:
          description: Error de servidor
  /cursos/{cursoId}:
    delete:
      tags:
      - Curso
      summary: Borrar un curso
      description: Se elimina un curso a partir de su Id
      operationId: eliminarCurso
      parameters:
      - name: cursoId
        in: path
        description: Id del curso a eliminar
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Se elimino correctamente el curso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curso'
        404:
          description: No se encontraron datos del curso a eliminar
        500:
          description: Error de servidor
  /cursos/{cursoId}/{alumnoId}/nota:
    patch:
      tags:
      - Curso
      summary: Modifica la nota de un alumno
      description: Obtiene a un alumno de un determinado curso y le modifica la nota
      operationId: modificarNota
      parameters:
      - name: cursoId
        in: path
        description: Id del curso a obtener
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: alumnoId
        in: path
        description: Id del alumno a modificar la nota
        required: true
        style: simple
        explode: false
        schema:
          type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body'
        required: true
      responses:
        200:
          description: Se cargo la nota correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curso'
        404:
          description: No se pudo obtener el alumno del curso respectivo
        500:
          description: Error de servidor
  /curso/{cursoId}/alumnos:
    get:
      tags:
      - Curso
      summary: Obtiene todos los alumnos
      description: Devuelve todos los alumnos de un curso en particular
      operationId: obtenerAlumnos
      parameters:
      - name: cursoId
        in: path
        description: Id del curso a filtrar
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Se obtuvieron los alumnos del curso correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alumno'
        404:
          description: No se pudo obtener alumnos para el Id provisto
        500:
          description: Error en el servidor
  /cursos/{cursoId}/alumnoDestacado:
    get:
      tags:
      - Curso
      summary: Obtiene el alumno destacado
      description: Obtiene el alumno destacado de un curso en particular
      operationId: obtenerAlumnoDestacado
      parameters:
      - name: cursoId
        in: path
        description: Id del curso a filtrar
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Se obtuvo el alumno destacado correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alumno'
        404:
          description: No se encontraron alumnos destacados para el curso
        500:
          description: Error del servidor
  /users/signup:
    post:
      tags:
      - Usuario
      summary: Crear usuario
      description: Se registra un usuario
      operationId: crearUsuario
      requestBody:
        description: Usuario a crear
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        201:
          description: Usuario registrado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
        409:
          description: No se pudo registrar el usuario
        500:
          description: Error de servidor
  /user/signin:
    post:
      tags:
      - Usuario
      summary: Inicio de sesion
      description: Inicio de sesion para usuarios ya existentes
      operationId: inicioSesion
      requestBody:
        description: Datos de usuario
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        200:
          description: Autenticacion exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        401:
          description: Autenticacion fallida
        500:
          description: Error de servidor
components:
  schemas:
    Curso:
      type: object
      properties:
        id:
          type: string
        anioDictado:
          type: string
          format: date-time
        duracion:
          type: integer
          format: int32
        tema:
          type: string
        alumnos:
          type: array
          items:
            $ref: '#/components/schemas/Alumno'
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        password:
          type: string
    Alumno:
      type: object
      properties:
        nombre:
          type: string
        apellido:
          type: string
        dni:
          type: number
          format: int32
        direccion:
          type: string
    body:
      type: object
      properties:
        nota:
          type: number
    inline_response_201:
      type: object
      properties:
        mensaje:
          type: string
        username:
          type: string
    inline_response_200:
      type: object
      properties:
        username:
          type: string
        jwt:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
